import ffmpeg
import os
import time
import shutil
from typing import Optional

def create_video_segment(
    video_path: Optional[str],
    timestamp: float,
    duration: int = 30,
    output_dir: str = "/kaggle/working/temp_clips"
) -> Optional[str]:
    """
    C·∫Øt m·ªôt ƒëo·∫°n video ng·∫Øn t·ª´ m·ªôt file video l·ªõn t·∫°i m·ªôt timestamp cho tr∆∞·ªõc.

    H√†m n√†y s·∫Ω c·ªë g·∫Øng c·∫Øt video b·∫±ng c√°ch sao ch√©p codec (r·∫•t nhanh) tr∆∞·ªõc.
    N·∫øu th·∫•t b·∫°i (th∆∞·ªùng do keyframe kh√¥ng align), n√≥ s·∫Ω t·ª± ƒë·ªông th·ª≠ l·∫°i b·∫±ng c√°ch
    re-encode video (ch·∫≠m h∆°n nh∆∞ng ƒë√°ng tin c·∫≠y h∆°n).

    Args:
        video_path (Optional[str]): ƒê∆∞·ªùng d·∫´n ƒë·∫ßy ƒë·ªß ƒë·∫øn file video ngu·ªìn.
        timestamp (float): Th·ªùi ƒëi·ªÉm (t√≠nh b·∫±ng gi√¢y) l√†m trung t√¢m c·ªßa ƒëo·∫°n clip.
        duration (int): Th·ªùi l∆∞·ª£ng c·ªßa ƒëo·∫°n clip c·∫Øt ra (t√≠nh b·∫±ng gi√¢y).
        output_dir (str): Th∆∞ m·ª•c ƒë·ªÉ l∆∞u c√°c file clip t·∫°m th·ªùi.

    Returns:
        Optional[str]: ƒê∆∞·ªùng d·∫´n ƒë·∫øn file video clip ƒë√£ ƒë∆∞·ª£c t·∫°o, ho·∫∑c None n·∫øu c√≥ l·ªói.
    """
    # --- B∆∞·ªõc 1: Validate Input ---
    if not video_path or not isinstance(video_path, str):
        print(f"--- ‚ö†Ô∏è L·ªói C·∫Øt Video: ƒê∆∞·ªùng d·∫´n video kh√¥ng h·ª£p l·ªá (gi√° tr·ªã l√† {video_path}). ---")
        return None
        
    if not os.path.exists(video_path):
        print(f"--- ‚ö†Ô∏è L·ªói C·∫Øt Video: File video kh√¥ng t·ªìn t·∫°i t·∫°i '{video_path}'. ---")
        return None
    
    # --- B∆∞·ªõc 2: Chu·∫©n b·ªã ƒë∆∞·ªùng d·∫´n v√† d·ªçn d·∫πp ---
    # T·∫°o th∆∞ m·ª•c output n·∫øu ch∆∞a t·ªìn t·∫°i
    os.makedirs(output_dir, exist_ok=True)
    
    # D·ªçn d·∫πp c√°c clip c≈© ƒë·ªÉ tr√°nh ƒë·∫ßy b·ªô nh·ªõ Kaggle
    cleanup_old_clips(output_dir, max_age_seconds=600) # X√≥a clip c≈© h∆°n 10 ph√∫t

    # T√≠nh to√°n th·ªùi ƒëi·ªÉm b·∫Øt ƒë·∫ßu, ƒë·∫£m b·∫£o kh√¥ng √¢m
    start_time = max(0, timestamp - (duration / 2))
    
    # T·∫°o t√™n file output ƒë·ªôc nh·∫•t ƒë·ªÉ tr√°nh xung ƒë·ªôt
    timestamp_ms = int(time.time() * 1000)
    output_filename = f"clip_{os.path.basename(video_path)}_{timestamp_ms}.mp4"
    output_clip_path = os.path.join(output_dir, output_filename)
    
    print(f"--- üé¨ B·∫Øt ƒë·∫ßu t·∫°o clip: Ngu·ªìn='{os.path.basename(video_path)}', Time={timestamp:.2f}s, Output='{output_filename}' ---")

    # --- B∆∞·ªõc 3: C·ªë g·∫Øng c·∫Øt nhanh (Stream Copy) ---
    try:
        print("   -> Th·ª≠ ph∆∞∆°ng ph√°p c·∫Øt nhanh (copy codec)...")
        (
            ffmpeg
            .input(video_path, ss=start_time)
            .output(output_clip_path, t=duration, c='copy', y=None) # c='copy' l√† m·∫•u ch·ªët
            .run(overwrite_output=True, quiet=True, capture_stdout=True, capture_stderr=True)
        )
        print("   -> ‚úÖ C·∫Øt nhanh th√†nh c√¥ng!")
        return output_clip_path
    except ffmpeg.Error as e:
        print(f"   -> ‚ö†Ô∏è C·∫Øt nhanh th·∫•t b·∫°i. L·ªói FFMPEG: {e.stderr.decode('utf8')}")
        # L·ªói c√≥ th·ªÉ x·∫£y ra n·∫øu start_time kh√¥ng ph·∫£i l√† m·ªôt I-frame.
        # Ch√∫ng ta s·∫Ω th·ª≠ l·∫°i b·∫±ng c√°ch re-encode.
    
    # --- B∆∞·ªõc 4: Fallback - C·∫Øt b·∫±ng c√°ch Re-encode ---
    try:
        print("   -> Th·ª≠ ph∆∞∆°ng ph√°p c·∫Øt b·∫±ng re-encode (ƒë√°ng tin c·∫≠y h∆°n)...")
        (
            ffmpeg
            .input(video_path, ss=start_time)
            .output(output_clip_path, t=duration, y=None) # B·ªè 'c=copy' ƒë·ªÉ ffmpeg t·ª± ch·ªçn codec v√† re-encode
            .run(overwrite_output=True, quiet=True, capture_stdout=True, capture_stderr=True)
        )
        print("   -> ‚úÖ Re-encode th√†nh c√¥ng!")
        return output_clip_path
    except ffmpeg.Error as e:
        print(f"--- ‚ùå L·ªói C·∫Øt Video: C·∫£ hai ph∆∞∆°ng ph√°p ƒë·ªÅu th·∫•t b·∫°i. L·ªói FFMPEG cu·ªëi c√πng: {e.stderr.decode('utf8')} ---")
        return None

def cleanup_old_clips(directory: str, max_age_seconds: int):
    """
    D·ªçn d·∫πp c√°c file clip c≈© trong m·ªôt th∆∞ m·ª•c ƒë·ªÉ gi·∫£i ph√≥ng dung l∆∞·ª£ng.

    Args:
        directory (str): Th∆∞ m·ª•c ch·ª©a c√°c file clip.
        max_age_seconds (int): Tu·ªïi t·ªëi ƒëa c·ªßa m·ªôt file (t√≠nh b·∫±ng gi√¢y) tr∆∞·ªõc khi b·ªã x√≥a.
    """
    try:
        current_time = time.time()
        for filename in os.listdir(directory):
            file_path = os.path.join(directory, filename)
            if os.path.isfile(file_path):
                file_age = current_time - os.path.getmtime(file_path)
                if file_age > max_age_seconds:
                    print(f"   -> üßπ D·ªçn d·∫πp clip c≈©: {filename}")
                    os.remove(file_path)
    except Exception as e:
        print(f"--- ‚ö†Ô∏è L·ªói khi d·ªçn d·∫πp clip c≈©: {e} ---")
